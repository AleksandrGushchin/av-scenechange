name: av-scenechange

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install nasm
      env:
        LINK: http://debian-archive.trafficmanager.net/debian/pool/main/n/nasm
        NASM_VERSION: 2.14.02-1
        NASM_SHA256: >-
          5225d0654783134ae616f56ce8649e4df09cba191d612a0300cfd0494bb5a3ef
      run: |
        curl -O "$LINK/nasm_${NASM_VERSION}_amd64.deb"
        echo "$NASM_SHA256 nasm_${NASM_VERSION}_amd64.deb" | sha256sum --check
        sudo dpkg -i "nasm_${NASM_VERSION}_amd64.deb"
    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: clippy, rustfmt
    - name: Run rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check --verbose
    - name: Clippy No Default Features
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --no-default-features
    - name: Lint
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features --tests --benches
        name: lint
    - name: Build
      run: cargo build --all-features --tests --benches
    - name: Run tests
      run: cargo test --all-features
    - name: Generate docs
      run: cargo doc --all-features --no-deps

  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install nasm
      run: |
        $NASM_VERSION="nasm-2.14.02"
        curl -LO "https://people.xiph.org/~tdaede/$NASM_VERSION-win64.zip"
        7z e -y "$NASM_VERSION-win64.zip" -o"C:\nasm"
        echo "::add-path::C:\nasm"
    - name: Set MSVC x86_64 linker path
      run: |
        $LinkGlob = "VC\Tools\MSVC\*\bin\Hostx64\x64"
        $env:PATH = "$env:PATH;${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer"
        $LinkPath = vswhere -latest -products * -find "$LinkGlob" | Select-Object -Last 1
        echo "::add-path::$LinkPath"
    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Build
      run: cargo build --all-features --tests --benches
    - name: Run tests
      run: cargo test --all-features
    - name: Generate docs
      run: cargo doc --all-features --no-deps
